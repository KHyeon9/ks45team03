<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks45team03.rentravel.mapper.AdminUserMapper">
	<resultMap type="User" id="userResultMap">
		<id property="userId" column="user_id" />
		<result property="userPw" column="user_pw" />
		<result property="userName" column="user_name" />
		<result property="userNickName" column="user_nickname" />
		<result property="userLevelName" column="user_level_Name" />
		<result property="userLevelCode" column="user_level_code" />
		<result property="userEmail" column="user_email" />
		<result property="userPhoneNumber" column="user_phone_number" />
		<result property="userImage" column="user_image" />
		<result property="regionSggCode" column="region_sgg_code" />
		<result property="userAddrDesc" column="user_addr_desc" />
		<result property="totalExp" column="total_exp" />
		<result property="totalMileage" column="total_mileage" />
		<result property="userCreateDate" column="user_create_date" />
		<result property="userWithdrawal" column="user_withdrawal" />
	</resultMap>
	
	<resultMap type="LoginHistory" id="loginHistoryResultMap">
		<id property="loginCode" column="login_code" />
		<result property="userId" column="user_id" />
		<result property="loginDate" column="login_date" />
	</resultMap>
	
	<resultMap type="SleeperAccount" id="sleeperAccountResultMap">
		<id property="sleeperAccountCode" column="sleeper_account_code" />
		<result property="userId" column="user_id" />
		<result property="loginDate" column="login_date" />
	</resultMap>
	
	<resultMap type="RemoveAccount" id="removeAccountResultMap">
		<id property="sleeperAccountCode" column="sleeper_account_code" />
		<result property="userId" column="user_id" />
		<result property="removeAccountDate" column="remove_account_date" />
	</resultMap>
	
	<select id="userList" resultMap="userResultMap">
		/* 회원 목록 조회 */
		SELECT
			 u.user_id
			,u.user_pw
			,u.user_name
			,u.user_nickname
			,ul.user_level_name
			,u.user_email
			,u.user_phone_number
			,u.user_image
			,u.total_exp
			,CONCAT_WS(' ', si.region_sido_name, sgg.region_sgg_name, u.user_addr_desc) AS region
			,u.total_mileage
			,u.user_create_date
		FROM
			tb_user AS u	
			INNER JOIN
			tb_user_level AS ul
			ON 
			u.user_level_code = ul.user_level_code
			INNER join
			tb_region_sgg AS sgg
			ON 
			u.region_sgg_code = sgg.region_sgg_code
			INNER join
			tb_region_sido AS si
			ON 
			sgg.region_sido_code = si.region_sido_code
		WHERE
			u.user_withdrawal NOT IN ('Y');
	</select>

	<select id="getUserListCnt" resultType="int">
		/* 회원목록 테이블의 전체 행의 갯수 검색시 바뀐데이터의 갯수에 맞춰 페이징을 넣기 위해 where절 추가 */
		SELECT
			COUNT(1)
		FROM
			tb_user AS u
			INNER JOIN
			tb_user_level AS ul
			ON 
			u.user_level_code = ul.user_level_code
		<where>
			<if test="searchKey != null and searchValue != ''">
				${searchKey} LIKE CONCAT('%', #{searchValue}, '%');
			</if>
		</where>	
	</select>
	
	<select id="getUserInfoById" parameterType="String" resultMap="userResultMap">
		/* 특정 회원 정보 조회 */
		SELECT
			 u.user_id
			,u.user_pw
			,u.user_name
			,u.user_nickname
			,u.user_level_code
			,u.user_email
			,u.user_phone_number
			,u.region_sgg_code
			,u.user_addr_desc
			,u.total_exp
			,u.total_mileage
		FROM
			tb_user AS u
		WHERE	
			u.user_id = #{userId};
	</select>
	
	<select id="getUserLevelList" resultType="UserLevel">
  		/* 회원등급조회 */
		SELECT
			 ul.user_level_code AS userLevelCode
			,ul.user_level_name AS userLevelName
		FROM
			tb_user_level AS ul;
	  	</select>
	  	
  	<update id="modifyUser" parameterType="User">
	  	UPDATE tb_user
	  	<trim prefix="SET" prefixOverrides=",">
	  	<if test="userPw != null and userPw != ''">
	  		user_pw = #{userPw}
	  	</if>
	  	<if test="userName != null and userName != ''">
	  		,user_name = #{userName}
	  	</if>
	  	<if test="userNickName != null and userNickName != ''">
	  		,user_nickname = #{userNickName}
	  	</if>
	  	<if test="userLevelCode != null and userLevelCode != ''">
	  		,user_level_code = #{userLevelCode}
	  	</if>
	  	<if test="userEmail != null and userEmail != ''">
	  		,user_email = #{userEmail}
	  	</if>
	  	<if test="userPhoneNumber != null and userPhoneNumber != ''">
	  		,user_phone_number = #{userPhoneNumber}
	  	</if>
	  	<if test="totalExp != null and totalExp != ''">
	  		,total_exp = #{totalExp}
	  	</if>
	  	<if test="regionSggCode != null and regionSggCode != ''">
	  		,region_sgg_code = #{regionSggCode}
	  	</if>
	  		<if test="totalMileage != null and totalMileage != ''">
	  		,total_mileage = #{totalMileage}
	  	</if>
	  	</trim>
	  	WHERE
	  		user_id = #{userId};
  	</update>
  	
  	<select id="loginHistory" resultMap="loginHistoryResultMap">
  		SELECT 
  			 @rownum:=@rownum+1 AS num
  			,l.login_code
  			,l.user_id
  			,l.login_date
  		FROM
  			tb_login AS l, (SELECT @rownum:=0) AS TMP
  		WHERE
			l.user_id LIKE CONCAT('%', #{searchValue}, '%')
 		ORDER BY num DESC
		<if test="startIndex != null and startIndex > -1">
			LIMIT #{startIndex}, #{pageSize};
		</if>
  	</select>
  	
  	<select id="loginHistoryCnt" resultType="int">
		SELECT
			COUNT(1)
		FROM
			tb_login AS l
		WHERE
			l.user_id LIKE CONCAT('%', #{searchValue}, '%');
	</select>
  	
  	<select id="sleeperAccountList" resultMap="sleeperAccountResultMap">
  		SELECT
  		 	 @rownum:=@rownum+1 AS num
		    ,sa.user_id
		    ,sa.login_date
		    ,max(l.login_date) AS lastLoginDate	
		FROM
			tb_sleeper_account AS sa
			INNER JOIN
			tb_login AS l
			ON
			sa.user_id = l.user_id
			, (SELECT @rownum:=0) AS TMP
			WHERE		
				sa.user_id LIKE CONCAT('%', #{searchValue}, '%')
			GROUP BY sa.user_id
			ORDER BY num DESC
			<if test="startIndex != null and startIndex > -1">
				LIMIT #{startIndex}, #{pageSize};
			</if>
  	</select>
  	
  	<select id="sleeperAccountCnt" resultType="int">
		SELECT
			COUNT(1)
		FROM
			tb_sleeper_account AS sa
		WHERE
			sa.user_id LIKE CONCAT('%', #{searchValue}, '%');
			
		
	</select>
  	
  	<select id="getSleeperAccountByLoginHistory" resultMap="loginHistoryResultMap">
		SELECT
			  l.user_id 
			 ,DATEDIFF(NOW(), MAX(l.login_date)) AS dateDiff
		FROM
			(SELECT l.* FROM tb_login AS l INNER JOIN tb_user AS u ON l.user_id = u.user_id WHERE u.user_withdrawal NOT IN ('Y')) AS l
		GROUP BY l.user_id
		HAVING 
			DATEDIFF(NOW(), MAX(l.login_date)) >= 180
	</select>
	
	<insert id="addSleeperAccount">
			REPLACE INTO 
				tb_sleeper_account(user_id, login_date)
			VALUES
		<foreach collection="getSleeperAccountByLoginHistory" item="sleeperAccount" open="(" close=")" separator="),(">
				#{sleeperAccount.userId}, #{sleeperAccount.dateDiff}
		</foreach>
	</insert>
	
	<select id="removeAccountList" resultMap="removeAccountResultMap">
		SELECT
		     @rownum:=@rownum+1 AS num
			,ra.user_id
			,ra.remove_account_date
			,DATEDIFF(NOW(), ra.remove_account_date) AS dateDiff
		FROM
			tb_remove_account as ra, (SELECT @rownum:=0) AS TMP
		ORDER BY num DESC
		<if test="startIndex != null and startIndex > -1">
			LIMIT #{startIndex}, #{pageSize};
		</if>
	</select>
	
	<select id="removeAccountCnt" resultType="int">
		SELECT
			COUNT(1)
		FROM
			tb_remove_account;
	</select>
	
	<update id="removeUserByAdmin" parameterType="String">
		UPDATE 
			tb_user AS u
		SET
			u.user_withdrawal = 'Y'	
		WHERE
			u.user_id = #{userId};
	</update>
	
	<insert id="setRemoveAccount">
		INSERT INTO 
			tb_remove_account(user_id, remove_account_date)
		VALUES
		(
			#{userId}, NOW()
		);
	</insert>
</mapper>